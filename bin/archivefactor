#!/usr/bin/env python
# encoding: utf-8
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
from factor._version import __version__ as version
import optparse
import sys
import os
from factor.archive import archive


if __name__ == '__main__':
    parser = optparse.OptionParser(usage='%prog parset dir_output',
            version='%%prog %s' % (version))
    parser.add_option('-d', '--directions', help='comma-separated list of directions '
        '(e.g., "-d facet1,facet3") for which to archive the calibrated data. Use '
        '"-d all" to select all directions.', type=str, default=None)
    parser.add_option('-r', '--resumable', help='make an archive suitable for resuming '
        '(includes the subtracted-data MS files, but not the calibrated data unless '
        'specified with the "-d" flag)', action='store_true', default=False)
    parser.add_option('-c', '--clobber', help='clobber existing files in output directory',
        action='store_true', default=False)
    (options, args) = parser.parse_args()

    if len(args) != 2:
        parser.print_help()
        sys.exit()

    parset_file = os.path.abspath(args[0])
    dir_output = os.path.abspath(args[1])

    # Construct list of directions to archive
    if options.directions is not None:
        parts = options.directions.split(',')
        directions = [p.strip() for p in parts]
    else:
        directions = []

    archive(parset_file, directions, dir_output, full=options.resumable, clobber=options.clobber)
